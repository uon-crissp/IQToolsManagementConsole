//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace IQToolsManagementConsole.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetFacilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIQToolsDBDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataDCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataDBLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback MergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrievePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogUserHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback xxxxxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorLoggingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::IQToolsManagementConsole.Properties.Settings.Default.IQToolsManagementConsole_localhost_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetFacilityCompletedEventHandler GetFacilityCompleted;
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetDataDBCompletedEventHandler GetDataDBCompleted;
        
        /// <remarks/>
        public event GetIQToolsDBDataCompletedEventHandler GetIQToolsDBDataCompleted;
        
        /// <remarks/>
        public event GetQueriesCompletedEventHandler GetQueriesCompleted;
        
        /// <remarks/>
        public event GetDBsCompletedEventHandler GetDBsCompleted;
        
        /// <remarks/>
        public event GetDataDCCompletedEventHandler GetDataDCCompleted;
        
        /// <remarks/>
        public event GetDataDBLogCompletedEventHandler GetDataDBLogCompleted;
        
        /// <remarks/>
        public event MergeCompletedEventHandler MergeCompleted;
        
        /// <remarks/>
        public event CheckAvailabilityCompletedEventHandler CheckAvailabilityCompleted;
        
        /// <remarks/>
        public event GetCredentialsCompletedEventHandler GetCredentialsCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event ChangeDetailsCompletedEventHandler ChangeDetailsCompleted;
        
        /// <remarks/>
        public event SaveQueryCompletedEventHandler SaveQueryCompleted;
        
        /// <remarks/>
        public event UpdateQueryCompletedEventHandler UpdateQueryCompleted;
        
        /// <remarks/>
        public event RetrievePasswordCompletedEventHandler RetrievePasswordCompleted;
        
        /// <remarks/>
        public event LogUserHistoryCompletedEventHandler LogUserHistoryCompleted;
        
        /// <remarks/>
        public event PasswordChangedCompletedEventHandler PasswordChangedCompleted;
        
        /// <remarks/>
        public event xxxxxCompletedEventHandler xxxxxCompleted;
        
        /// <remarks/>
        public event GetUserLocationCompletedEventHandler GetUserLocationCompleted;
        
        /// <remarks/>
        public event ErrorLoggingCompletedEventHandler ErrorLoggingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFacility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFacility(string sqlString) {
            object[] results = this.Invoke("GetFacility", new object[] {
                        sqlString});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFacilityAsync(string sqlString) {
            this.GetFacilityAsync(sqlString, null);
        }
        
        /// <remarks/>
        public void GetFacilityAsync(string sqlString, object userState) {
            if ((this.GetFacilityOperationCompleted == null)) {
                this.GetFacilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFacilityOperationCompleted);
            }
            this.InvokeAsync("GetFacility", new object[] {
                        sqlString}, this.GetFacilityOperationCompleted, userState);
        }
        
        private void OnGetFacilityOperationCompleted(object arg) {
            if ((this.GetFacilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFacilityCompleted(this, new GetFacilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetData(string sql) {
            object[] results = this.Invoke("GetData", new object[] {
                        sql});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string sql) {
            this.GetDataAsync(sql, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string sql, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        sql}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataDB(string sql, string DB, string dbType) {
            object[] results = this.Invoke("GetDataDB", new object[] {
                        sql,
                        DB,
                        dbType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataDBAsync(string sql, string DB, string dbType) {
            this.GetDataDBAsync(sql, DB, dbType, null);
        }
        
        /// <remarks/>
        public void GetDataDBAsync(string sql, string DB, string dbType, object userState) {
            if ((this.GetDataDBOperationCompleted == null)) {
                this.GetDataDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataDBOperationCompleted);
            }
            this.InvokeAsync("GetDataDB", new object[] {
                        sql,
                        DB,
                        dbType}, this.GetDataDBOperationCompleted, userState);
        }
        
        private void OnGetDataDBOperationCompleted(object arg) {
            if ((this.GetDataDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataDBCompleted(this, new GetDataDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIQToolsDBData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetIQToolsDBData(string sql, string dbType) {
            object[] results = this.Invoke("GetIQToolsDBData", new object[] {
                        sql,
                        dbType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetIQToolsDBDataAsync(string sql, string dbType) {
            this.GetIQToolsDBDataAsync(sql, dbType, null);
        }
        
        /// <remarks/>
        public void GetIQToolsDBDataAsync(string sql, string dbType, object userState) {
            if ((this.GetIQToolsDBDataOperationCompleted == null)) {
                this.GetIQToolsDBDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIQToolsDBDataOperationCompleted);
            }
            this.InvokeAsync("GetIQToolsDBData", new object[] {
                        sql,
                        dbType}, this.GetIQToolsDBDataOperationCompleted, userState);
        }
        
        private void OnGetIQToolsDBDataOperationCompleted(object arg) {
            if ((this.GetIQToolsDBDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIQToolsDBDataCompleted(this, new GetIQToolsDBDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQueries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetQueries(string emr, int userID) {
            object[] results = this.Invoke("GetQueries", new object[] {
                        emr,
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueriesAsync(string emr, int userID) {
            this.GetQueriesAsync(emr, userID, null);
        }
        
        /// <remarks/>
        public void GetQueriesAsync(string emr, int userID, object userState) {
            if ((this.GetQueriesOperationCompleted == null)) {
                this.GetQueriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueriesOperationCompleted);
            }
            this.InvokeAsync("GetQueries", new object[] {
                        emr,
                        userID}, this.GetQueriesOperationCompleted, userState);
        }
        
        private void OnGetQueriesOperationCompleted(object arg) {
            if ((this.GetQueriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueriesCompleted(this, new GetQueriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDBs(string countryCode, string emr) {
            object[] results = this.Invoke("GetDBs", new object[] {
                        countryCode,
                        emr});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBsAsync(string countryCode, string emr) {
            this.GetDBsAsync(countryCode, emr, null);
        }
        
        /// <remarks/>
        public void GetDBsAsync(string countryCode, string emr, object userState) {
            if ((this.GetDBsOperationCompleted == null)) {
                this.GetDBsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBsOperationCompleted);
            }
            this.InvokeAsync("GetDBs", new object[] {
                        countryCode,
                        emr}, this.GetDBsOperationCompleted, userState);
        }
        
        private void OnGetDBsOperationCompleted(object arg) {
            if ((this.GetDBsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBsCompleted(this, new GetDBsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataDC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataDC(string[] parameters, string sql, string DB, string dbType) {
            object[] results = this.Invoke("GetDataDC", new object[] {
                        parameters,
                        sql,
                        DB,
                        dbType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataDCAsync(string[] parameters, string sql, string DB, string dbType) {
            this.GetDataDCAsync(parameters, sql, DB, dbType, null);
        }
        
        /// <remarks/>
        public void GetDataDCAsync(string[] parameters, string sql, string DB, string dbType, object userState) {
            if ((this.GetDataDCOperationCompleted == null)) {
                this.GetDataDCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataDCOperationCompleted);
            }
            this.InvokeAsync("GetDataDC", new object[] {
                        parameters,
                        sql,
                        DB,
                        dbType}, this.GetDataDCOperationCompleted, userState);
        }
        
        private void OnGetDataDCOperationCompleted(object arg) {
            if ((this.GetDataDCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataDCCompleted(this, new GetDataDCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataDBLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataDBLog(string sql, string DB, string dbType, int UserID, string application, string method) {
            object[] results = this.Invoke("GetDataDBLog", new object[] {
                        sql,
                        DB,
                        dbType,
                        UserID,
                        application,
                        method});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataDBLogAsync(string sql, string DB, string dbType, int UserID, string application, string method) {
            this.GetDataDBLogAsync(sql, DB, dbType, UserID, application, method, null);
        }
        
        /// <remarks/>
        public void GetDataDBLogAsync(string sql, string DB, string dbType, int UserID, string application, string method, object userState) {
            if ((this.GetDataDBLogOperationCompleted == null)) {
                this.GetDataDBLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataDBLogOperationCompleted);
            }
            this.InvokeAsync("GetDataDBLog", new object[] {
                        sql,
                        DB,
                        dbType,
                        UserID,
                        application,
                        method}, this.GetDataDBLogOperationCompleted, userState);
        }
        
        private void OnGetDataDBLogOperationCompleted(object arg) {
            if ((this.GetDataDBLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataDBLogCompleted(this, new GetDataDBLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Merge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Merge(string emr, string sql, string DB, string[] DBs, int UID) {
            object[] results = this.Invoke("Merge", new object[] {
                        emr,
                        sql,
                        DB,
                        DBs,
                        UID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MergeAsync(string emr, string sql, string DB, string[] DBs, int UID) {
            this.MergeAsync(emr, sql, DB, DBs, UID, null);
        }
        
        /// <remarks/>
        public void MergeAsync(string emr, string sql, string DB, string[] DBs, int UID, object userState) {
            if ((this.MergeOperationCompleted == null)) {
                this.MergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMergeOperationCompleted);
            }
            this.InvokeAsync("Merge", new object[] {
                        emr,
                        sql,
                        DB,
                        DBs,
                        UID}, this.MergeOperationCompleted, userState);
        }
        
        private void OnMergeOperationCompleted(object arg) {
            if ((this.MergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MergeCompleted(this, new MergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckAvailability() {
            object[] results = this.Invoke("CheckAvailability", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAvailabilityAsync() {
            this.CheckAvailabilityAsync(null);
        }
        
        /// <remarks/>
        public void CheckAvailabilityAsync(object userState) {
            if ((this.CheckAvailabilityOperationCompleted == null)) {
                this.CheckAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAvailabilityOperationCompleted);
            }
            this.InvokeAsync("CheckAvailability", new object[0], this.CheckAvailabilityOperationCompleted, userState);
        }
        
        private void OnCheckAvailabilityOperationCompleted(object arg) {
            if ((this.CheckAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAvailabilityCompleted(this, new CheckAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCredentials", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCredentials(string username, string password) {
            object[] results = this.Invoke("GetCredentials", new object[] {
                        username,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCredentialsAsync(string username, string password) {
            this.GetCredentialsAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetCredentialsAsync(string username, string password, object userState) {
            if ((this.GetCredentialsOperationCompleted == null)) {
                this.GetCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCredentialsOperationCompleted);
            }
            this.InvokeAsync("GetCredentials", new object[] {
                        username,
                        password}, this.GetCredentialsOperationCompleted, userState);
        }
        
        private void OnGetCredentialsOperationCompleted(object arg) {
            if ((this.GetCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCredentialsCompleted(this, new GetCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangePassword(int userid, string oldPassword, string newPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        userid,
                        oldPassword,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(int userid, string oldPassword, string newPassword) {
            this.ChangePasswordAsync(userid, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(int userid, string oldPassword, string newPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        userid,
                        oldPassword,
                        newPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangeDetails(int userid, string email, string fname, string lname) {
            object[] results = this.Invoke("ChangeDetails", new object[] {
                        userid,
                        email,
                        fname,
                        lname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeDetailsAsync(int userid, string email, string fname, string lname) {
            this.ChangeDetailsAsync(userid, email, fname, lname, null);
        }
        
        /// <remarks/>
        public void ChangeDetailsAsync(int userid, string email, string fname, string lname, object userState) {
            if ((this.ChangeDetailsOperationCompleted == null)) {
                this.ChangeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeDetailsOperationCompleted);
            }
            this.InvokeAsync("ChangeDetails", new object[] {
                        userid,
                        email,
                        fname,
                        lname}, this.ChangeDetailsOperationCompleted, userState);
        }
        
        private void OnChangeDetailsOperationCompleted(object arg) {
            if ((this.ChangeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeDetailsCompleted(this, new ChangeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveQuery(string UID, string emr, string sql, string qryName, string qryDesc) {
            object[] results = this.Invoke("SaveQuery", new object[] {
                        UID,
                        emr,
                        sql,
                        qryName,
                        qryDesc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveQueryAsync(string UID, string emr, string sql, string qryName, string qryDesc) {
            this.SaveQueryAsync(UID, emr, sql, qryName, qryDesc, null);
        }
        
        /// <remarks/>
        public void SaveQueryAsync(string UID, string emr, string sql, string qryName, string qryDesc, object userState) {
            if ((this.SaveQueryOperationCompleted == null)) {
                this.SaveQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveQueryOperationCompleted);
            }
            this.InvokeAsync("SaveQuery", new object[] {
                        UID,
                        emr,
                        sql,
                        qryName,
                        qryDesc}, this.SaveQueryOperationCompleted, userState);
        }
        
        private void OnSaveQueryOperationCompleted(object arg) {
            if ((this.SaveQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveQueryCompleted(this, new SaveQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateQuery(string UID, string emr, string sql, string qryName, string qryDesc) {
            object[] results = this.Invoke("UpdateQuery", new object[] {
                        UID,
                        emr,
                        sql,
                        qryName,
                        qryDesc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQueryAsync(string UID, string emr, string sql, string qryName, string qryDesc) {
            this.UpdateQueryAsync(UID, emr, sql, qryName, qryDesc, null);
        }
        
        /// <remarks/>
        public void UpdateQueryAsync(string UID, string emr, string sql, string qryName, string qryDesc, object userState) {
            if ((this.UpdateQueryOperationCompleted == null)) {
                this.UpdateQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQueryOperationCompleted);
            }
            this.InvokeAsync("UpdateQuery", new object[] {
                        UID,
                        emr,
                        sql,
                        qryName,
                        qryDesc}, this.UpdateQueryOperationCompleted, userState);
        }
        
        private void OnUpdateQueryOperationCompleted(object arg) {
            if ((this.UpdateQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQueryCompleted(this, new UpdateQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrievePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrievePassword(string userName) {
            object[] results = this.Invoke("RetrievePassword", new object[] {
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrievePasswordAsync(string userName) {
            this.RetrievePasswordAsync(userName, null);
        }
        
        /// <remarks/>
        public void RetrievePasswordAsync(string userName, object userState) {
            if ((this.RetrievePasswordOperationCompleted == null)) {
                this.RetrievePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePasswordOperationCompleted);
            }
            this.InvokeAsync("RetrievePassword", new object[] {
                        userName}, this.RetrievePasswordOperationCompleted, userState);
        }
        
        private void OnRetrievePasswordOperationCompleted(object arg) {
            if ((this.RetrievePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrievePasswordCompleted(this, new RetrievePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogUserHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogUserHistory(int UserID, string logInOut) {
            this.Invoke("LogUserHistory", new object[] {
                        UserID,
                        logInOut});
        }
        
        /// <remarks/>
        public void LogUserHistoryAsync(int UserID, string logInOut) {
            this.LogUserHistoryAsync(UserID, logInOut, null);
        }
        
        /// <remarks/>
        public void LogUserHistoryAsync(int UserID, string logInOut, object userState) {
            if ((this.LogUserHistoryOperationCompleted == null)) {
                this.LogUserHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogUserHistoryOperationCompleted);
            }
            this.InvokeAsync("LogUserHistory", new object[] {
                        UserID,
                        logInOut}, this.LogUserHistoryOperationCompleted, userState);
        }
        
        private void OnLogUserHistoryOperationCompleted(object arg) {
            if ((this.LogUserHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogUserHistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PasswordChanged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PasswordChanged(string userName) {
            object[] results = this.Invoke("PasswordChanged", new object[] {
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PasswordChangedAsync(string userName) {
            this.PasswordChangedAsync(userName, null);
        }
        
        /// <remarks/>
        public void PasswordChangedAsync(string userName, object userState) {
            if ((this.PasswordChangedOperationCompleted == null)) {
                this.PasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("PasswordChanged", new object[] {
                        userName}, this.PasswordChangedOperationCompleted, userState);
        }
        
        private void OnPasswordChangedOperationCompleted(object arg) {
            if ((this.PasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PasswordChangedCompleted(this, new PasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/xxxxx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string xxxxx() {
            object[] results = this.Invoke("xxxxx", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void xxxxxAsync() {
            this.xxxxxAsync(null);
        }
        
        /// <remarks/>
        public void xxxxxAsync(object userState) {
            if ((this.xxxxxOperationCompleted == null)) {
                this.xxxxxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnxxxxxOperationCompleted);
            }
            this.InvokeAsync("xxxxx", new object[0], this.xxxxxOperationCompleted, userState);
        }
        
        private void OnxxxxxOperationCompleted(object arg) {
            if ((this.xxxxxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.xxxxxCompleted(this, new xxxxxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GeoLocation GetUserLocation(string ipAddress) {
            object[] results = this.Invoke("GetUserLocation", new object[] {
                        ipAddress});
            return ((GeoLocation)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLocationAsync(string ipAddress) {
            this.GetUserLocationAsync(ipAddress, null);
        }
        
        /// <remarks/>
        public void GetUserLocationAsync(string ipAddress, object userState) {
            if ((this.GetUserLocationOperationCompleted == null)) {
                this.GetUserLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLocationOperationCompleted);
            }
            this.InvokeAsync("GetUserLocation", new object[] {
                        ipAddress}, this.GetUserLocationOperationCompleted, userState);
        }
        
        private void OnGetUserLocationOperationCompleted(object arg) {
            if ((this.GetUserLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLocationCompleted(this, new GetUserLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ErrorLogging", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ErrorLogging(string errorMsg, string application, int UserID) {
            object[] results = this.Invoke("ErrorLogging", new object[] {
                        errorMsg,
                        application,
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ErrorLoggingAsync(string errorMsg, string application, int UserID) {
            this.ErrorLoggingAsync(errorMsg, application, UserID, null);
        }
        
        /// <remarks/>
        public void ErrorLoggingAsync(string errorMsg, string application, int UserID, object userState) {
            if ((this.ErrorLoggingOperationCompleted == null)) {
                this.ErrorLoggingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorLoggingOperationCompleted);
            }
            this.InvokeAsync("ErrorLogging", new object[] {
                        errorMsg,
                        application,
                        UserID}, this.ErrorLoggingOperationCompleted, userState);
        }
        
        private void OnErrorLoggingOperationCompleted(object arg) {
            if ((this.ErrorLoggingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorLoggingCompleted(this, new ErrorLoggingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GeoLocation {
        
        private string iPAddressField;
        
        private string countryNameField;
        
        private string countryCodeField;
        
        private string cityNameField;
        
        private string regionNameField;
        
        private string zipCodeField;
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFacilityCompletedEventHandler(object sender, GetFacilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFacilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFacilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataDBCompletedEventHandler(object sender, GetDataDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetIQToolsDBDataCompletedEventHandler(object sender, GetIQToolsDBDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIQToolsDBDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIQToolsDBDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQueriesCompletedEventHandler(object sender, GetQueriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDBsCompletedEventHandler(object sender, GetDBsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataDCCompletedEventHandler(object sender, GetDataDCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataDCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataDCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataDBLogCompletedEventHandler(object sender, GetDataDBLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataDBLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataDBLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MergeCompletedEventHandler(object sender, MergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckAvailabilityCompletedEventHandler(object sender, CheckAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCredentialsCompletedEventHandler(object sender, GetCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeDetailsCompletedEventHandler(object sender, ChangeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveQueryCompletedEventHandler(object sender, SaveQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateQueryCompletedEventHandler(object sender, UpdateQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RetrievePasswordCompletedEventHandler(object sender, RetrievePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrievePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrievePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogUserHistoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PasswordChangedCompletedEventHandler(object sender, PasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void xxxxxCompletedEventHandler(object sender, xxxxxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class xxxxxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal xxxxxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserLocationCompletedEventHandler(object sender, GetUserLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GeoLocation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GeoLocation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ErrorLoggingCompletedEventHandler(object sender, ErrorLoggingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorLoggingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ErrorLoggingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591